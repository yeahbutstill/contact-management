spring.cloud.vault.enabled=true

spring.config.import=vault://

spring.cloud.vault.fail-fast=true
spring.cloud.vault.uri=http://localhost:8288
spring.cloud.vault.kv.default-context=
spring.cloud.vault.kv.profiles=

spring.cloud.vault.authentication=APPROLE

#spring.cloud.vault.host=localhost
#spring.cloud.vault.application-name=contact-management
#spring.cloud.vault.kv.default-context=contact-management
#spring.cloud.vault.port=8288
#spring.cloud.vault.scheme=http
#spring.cloud.vault.connection-timeout=5000
#spring.cloud.vault.read-timeout=15000
#spring.cloud.vault.config.order=-10

# Jangan di hardcode, role-id kalau kita deploy ulang nanti dia akan berubah
# SPRING_CLOUD_VAULT_APPROLE_ROLEID=e26d0199-34d2-ce03-fc4d-a72f0cf147c3
#spring.cloud.vault.app-role.role-id=e26d0199-34d2-ce03-fc4d-a72f0cf147c3

# INI JANGAN HARCODE !!!
# PAKE ENV Variable yang udah diatur sama Spring
# SPRING_CLOUD_VAULT_APPROLE_SECRETID=2c11b21b-eaaf-c154-72a2-27e3a5cfc591
#spring.cloud.vault.app-role.secret-id=2c11b21b-eaaf-c154-72a2-27e3a5cfc591
# Menggunakan Wrapping Token (dari vault dianjurkan pake ini)
# SPRING_CLOUD_VAULT_TOKEN=hvs.CAESIOjGK_WRiWN9zVQ31c8ip6-nmkYw2ekRYuKZokn7L3KSGh4KHGh2cy5pWmx0ZmFxRGE1eXRjY3poMHhnR1NQYXE
#spring.cloud.vault.token=hvs.CAESIOjGK_WRiWN9zVQ31c8ip6-nmkYw2ekRYuKZokn7L3KSGh4KHGh2cy5pWmx0ZmFxRGE1eXRjY3poMHhnR1NQYXE